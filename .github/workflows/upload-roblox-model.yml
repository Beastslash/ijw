name: Upload Roblox model

on: 
  workflow_dispatch:
  push:
    branches:
      - production

concurrency:
  group: ${{ github.workflow }}

jobs:
  build:
    name: Build model
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      - name: Set up pesde
        uses: ernisto/setup-pesde@5f9a3399d5ae0fe78b014f5f13cd913f27755fb4
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: |
          pesde install

      - name: Build Rojo project
        run: rojo build model.project.json -o build.rbxm

      - name: Upload project
        uses: actions/upload-artifact@v4.4.0
        with:
          name: build.rbxm
          path: build.rbxm
    
  publish:
    name: Deploy to Roblox
    environment: Production
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - name: Download project
        uses: actions/download-artifact@v4.1.8
        with:
          name: build.rbxm

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21.x'

      - name: Get CSRF token
        id: get-csrf-token
        uses: actions/github-script@v7
        env:
          ROBLOX_DEPLOYMENT_COOKIE: ${{ secrets.ROBLOX_DEPLOYMENT_COOKIE }}
        with:
          script: |

            // Attempt to sign out using just the cookie.
            const response = await fetch("https://auth.roblox.com/v2/logout", {
              method: "POST",
              headers: {
                "Cookie": `.ROBLOSECURITY=${process.env.ROBLOX_DEPLOYMENT_COOKIE}`,
                "Content-Type": "application/json"
              }
            });

            if (response.ok) {
            
              core.setFailed("Could not get CSRF token because the sign out was successful.");
              return;
              
            }

            const csrfToken = response.headers.get("x-csrf-token");

            if (!csrfToken) {
              core.setFailed("Could not get CSRF token from the response headers.");
              return;
            }

            core.setOutput("csrf_token", csrfToken);

      - name: Publish to Roblox API
        env:
          ROBLOX_DEPLOYMENT_COOKIE: ${{ secrets.ROBLOX_DEPLOYMENT_COOKIE }}
          ROBLOX_ASSET_ID: ${{ vars.ROBLOX_ASSET_ID }}
          ROBLOX_CSRF_TOKEN: ${{ steps.get-csrf-token.outputs.csrf_token }}
        run: | 
          curl \
          --fail-with-body \
          -H "x-csrf-token: $ROBLOX_CSRF_TOKEN" \
          -H "Cookie: .ROBLOSECURITY=$ROBLOX_DEPLOYMENT_COOKIE" \
          -H "Content-Type: application/xml" \
          --data-binary @build.rbxm \
          "https://data.roblox.com/Data/Upload.ashx?json=1&assetId=""$ROBLOX_ASSET_ID"""